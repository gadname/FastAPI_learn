name: Claude Code
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

  # ラベル更新ジョブを追加
  update-label:
    if: |
      github.event_name == 'issue_comment' &&
      github.event.comment.user.login == 'claude[bot]' &&
      contains(github.event.comment.body, 'LABEL_UPDATE:')
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Wait for Claude to finish
        run: |
          echo "Waiting 10 seconds for Claude to complete..."
          sleep 10
          
      - name: Update Label
        uses: actions/github-script@v7
        with:
          script: |
            const comment = context.payload.comment.body;
            
            // LABEL_UPDATE:を探す
            const match = comment.match(/LABEL_UPDATE:([^\s\n]+)/);
            if (!match) {
              console.log('No LABEL_UPDATE found');
              return;
            }
            
            const newLabel = match[1];
            const issue = context.issue.number;
            
            console.log(`Updating issue #${issue} with label: ${newLabel}`);
            
            // 現在のラベルを取得
            const { data: currentLabels } = await github.rest.issues.listLabelsOnIssue({
              ...context.repo,
              issue_number: issue
            });
            
            // workflow:で始まるラベルを削除
            for (const label of currentLabels) {
              if (label.name.startsWith('workflow:')) {
                try {
                  await github.rest.issues.removeLabel({
                    ...context.repo,
                    issue_number: issue,
                    name: label.name
                  });
                } catch (e) {
                  console.log(`Failed to remove: ${label.name}`);
                }
              }
            }
            
            // 新しいラベルを追加
            await github.rest.issues.addLabels({
              ...context.repo,
              issue_number: issue,
              labels: [newLabel]
            });
            
            // 確認コメント
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: issue,
              body: `✅ ラベルを \`${newLabel}\` に更新しました。`
            });
